generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  users     User[]
}

model User {
  id        Int           @id @default(autoincrement())
  firstname String
  lastname  String
  age       Int
  email     String        @unique
  roleId    Int           @default(1)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @default(now())
  builds    Build[]
  role      Role          @relation(fields: [roleId], references: [id])
  password  UserPassword?
}

model Ability {
  id          Int    @id @default(autoincrement())
  name        String
  mana        Int
  description Int
  key         String
  heroId      Int
  hero        Hero   @relation(fields: [heroId], references: [id])
}

model Hero {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  abilities Ability[]
  builds    Build[]
}

model Build {
  id           Int      @id @default(autoincrement())
  name         String
  abilityOrder String[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  heroId       Int
  hero         Hero     @relation(fields: [heroId], references: [id])
  userId       Int?
  user         User?    @relation(fields: [userId], references: [id])
}

model UserPassword {
  passwordId   Int    @id @default(autoincrement())
  userId       Int    @unique
  passwordHash String
  user         User   @relation(fields: [userId], references: [id])
}
